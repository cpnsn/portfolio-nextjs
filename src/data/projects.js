export const projectsData = [
  {
    formation: "Ici Formation",
    projects: [
      {
        id: "ici-formation",
        title: "Ici Formation",
        year: "2023-2025",
        summary:
          "Durant mon alternance chez IcI Formation, j’ai participé à la maintenance et à l’évolution des sites de l’entreprise dans un contexte agile, avec des sprints de deux semaines et un suivi régulier des tickets. J’ai contribué à la refonte graphique du site principal en intégrant les maquettes, en développant de nouvelles fonctionnalités front-end et back-end, et en collaborant sur des optimisations SEO.",
        goal: "L’objectif principal était de moderniser le site principal grâce à une refonte graphique conforme aux maquettes et aux spécifications. Il s’agissait également de faire évoluer la plateforme en intégrant de nouvelles fonctionnalités et en améliorant son référencement. Le travail visait par ailleurs à garantir de bonnes performances techniques dans un environnement basé sur Symfony/Twig, Webpack et Docker, tout en renforçant la fiabilité du code par l’ajout de tests automatisés.",
        features: [
          "Participation à une refonte graphique complète, avec intégration des maquettes et respect des spécifications",
          "Développement et intégration de nouvelles fonctionnalités front-end et back-end en Symfony/Twig",
          "Optimisations SEO, en collaboration avec le responsable SEO",
          "Implémentation de tests automatisés avec Playwright et Jest",
        ],
        challenges: [
          "Intégrer la refonte graphique et les nouvelles fonctionnalités tout en conservant la stabilité du site existant",
          "Maintenir des performances optimales dans un environnement Symfony/Twig avec Webpack et Docker",
          "Renforcer la qualité et la fiabilité du code grâce à l’implémentation de tests automatisés avec Playwright et Jest",
        ],
        image: "/images/projects/ici-formation.png",
        default: true,
        tags: [
          "Ici Formation",
          "Symfony/Twig",
          "React",
          "Tailwind",
          "Playwright",
          "Jest",
        ],
        link: null,
        github: null,
      },
      {
        id: "outplacement-et-reclassement",
        title: "Outplacement et Reclassement",
        year: "2023-2025",
        summary: "Lorem",
        goal: "Ipsum",
        features: ["1", "2", "3"],
        challenges: ["1", "2", "3"],
        image: "/images/projects/outplacement-et-reclassement.png",
        default: true,
        tags: ["Ici Formation", "Next.js", "Tailwind"],
        link: null,
        github: null,
      },
      {
        id: "chatbot-ici-formation",
        title: "Chatbot interne Ici Formation",
        year: "2025",
        summary: "lorem",
        goal: "ipsum",
        features: ["1", "2", "3"],
        challenges: ["1", "2", "3"],
        image: "/images/projects/chatbot-ici-formation.png",
        default: true,
        tags: ["Ici Formation", "Symfony/Twig", "Tailwind"],
        link: null,
      },
    ],
  },
  {
    formation: "OpenClassrooms",
    projects: [
      {
        id: "booki",
        title: "Booki",
        year: "2023",
        summary:
          "Pour ce premier projet OpenClassrooms, il s’agissait de créer la page d’accueil d’une agence de voyage fictive, Booki, permettant aux utilisateurs de rechercher des hébergements et activités dans la ville de leur choix.",
        goal: "Intégrer fidèlement une maquette fournie par l’UI designer, en utilisant uniquement HTML et CSS, tout en respectant les contraintes techniques imposées. Ce projet avait aussi pour but de m’initier au responsive design et aux bonnes pratiques d’intégration.",
        features: [
          "Intégration complète de l’interface à partir d’une maquette fournie",
          "Mise en page responsive adaptée aux différents supports (desktop, tablette, mobile)",
          "Utilisation d’une structure de fichiers claire (HTML, CSS, images) fournie en amont",
          "Respect des normes d’accessibilité et de sémantique HTML",
        ],
        challenges: [
          "Adapter le design aux différents formats d’écran tout en conservant la cohérence visuelle",
          "Organiser le code CSS pour assurer lisibilité, réutilisabilité et maintien de la structure fournie",
          "Respecter strictement les spécifications et contraintes techniques définies par l’équipe (CTO + UI designer)",
        ],
        image: "/images/projects/booki.png",
        default: false,
        tags: ["OpenClassrooms", "HTML", "CSS"],
        link: null,
        github: null,
      },
      {
        id: "ohmyfood",
        title: "ohmyfood",
        year: "2023",
        summary:
          "Le second projet OpenClassrooms consistait à dynamiser une page web grâce aux animations CSS. Le site, développé en mobile-first, répertorie les menus de restaurants gastronomiques et propose une expérience utilisateur fluide et moderne.",
        goal: "Intégrer une interface responsive à partir de maquettes fournies, en respectant une approche “mobile first”. Mettre en œuvre des animations CSS soignées pour dynamiser l’expérience utilisateur, tout en utilisant un préprocesseur (SASS) et un suivi de version avec Git/GitHub.",
        features: [
          "Intégration responsive (mobile, tablette, desktop)",
          "Animations CSS reproduisant fidèlement le prototype Figma (transitions, effets d’apparition, comportements interactifs)",
          "Mise en place d’une architecture CSS avec SASS pour améliorer la modularité et la lisibilité du code",
          "Versionnement complet du projet avec Git et GitHub",
        ],
        challenges: [
          "Respecter une approche “mobile first“ en assurant la compatibilité sur tous les supports",
          "Reproduire des animations précises à partir des maquettes et du prototype Figma",
          "Structurer efficacement les styles avec SASS pour éviter la redondance et faciliter la maintenance",
        ],
        image: "/images/projects/ohmyfood.png",
        default: false,
        tags: ["OpenClassrooms", "HTML", "SASS"],
        link: null,
        github: "https://github.com/cpnsn/P3_ohMyFood",
      },
      {
        id: "gameon",
        title: "GameOn",
        year: "2023",
        summary:
          "Ce troisième projet OpenClassrooms, réalisé pour la PME fictive GameOn, consistait à finaliser une landing page avec formulaire d’inscription. C’était le premier projet intégrant du JavaScript dans la formation.",
        goal: "Rendre le formulaire pleinement fonctionnel en ajoutant le code JavaScript manquant, tout en respectant les bonnes pratiques de structuration (fichiers séparés, code commenté, responsive design).",
        features: [
          "Validation des champs du formulaire avec gestion des erreurs",
          "Gestion des événements JavaScript (ouverture/fermeture de la modale, interactions utilisateur)",
          "Respect de l’affichage responsive sur différents supports",
          "Code structuré et commenté pour en faciliter la maintenance",
        ],
        challenges: [
          "Mettre en place une validation précise des entrées utilisateur (format d’email, champs obligatoires, etc.)",
          "Gérer les événements de manière fluide pour offrir une bonne expérience utilisateur",
          "Garantir un comportement responsive et un rendu cohérent sur tous les appareils",
        ],
        image: "/images/projects/gameon.png",
        default: false,
        tags: ["OpenClassrooms", "HTML", "CSS", "Javascript"],
        link: null,
        github: "https://github.com/cpnsn/game_on",
      },
      {
        id: "fisheye",
        title: "FishEye",
        year: "2024",
        summary:
          "Ce quatrième projet OpenClassrooms consistait à développer un site web accessible pour la plateforme fictive FishEye, dédiée aux photographes indépendants. L’objectif était de créer un prototype fonctionnel fidèle aux maquettes et intégrant les exigences fortes en matière d’accessibilité.",
        goal: "Développer un site dynamique en JavaScript, conforme aux standards d’accessibilité, permettant la navigation clavier/lecteurs d’écran et l’affichage des données fournies en JSON.",
        features: [
          "Récupération et affichage dynamiques des données photographes et médias depuis un fichier JSON",
          "Navigation entre la page d’accueil et les pages individuelles des photographes",
          "Modale de contact accessible et fonctionnelle",
          "LightBox pour visionner les photos et vidéos en plein écran",
          "Gestion des likes avec mise à jour dynamique",
          "Respect des maquettes et des contraintes d’accessibilité",
        ],
        challenges: [
          "Mise en œuvre du design pattern Factory Method pour différencier les médias (photos et vidéos)",
          "Développement d’une navigation au clavier fluide pour assurer l’accessibilité complète",
          "Gestion des interactions complexes (modale, lightbox, likes) sans erreurs JavaScript",
          "Respect strict des standards WAI-ARIA et des bonnes pratiques d’accessibilité",
        ],
        image: "/images/projects/fisheye.png",
        default: true,
        tags: ["OpenClassrooms", "HTML", "CSS", "Javascript"],
        link: null,
        github: "https://github.com/cpnsn/Front-End-Fisheye",
      },
      {
        id: "les-petits-plats",
        title: "Les Petits Plats",
        year: "2024",
        summary:
          "Ce cinquième projet OpenClassrooms consistait à développer un moteur de recherche performant pour le site de recettes de cuisine Les Petits Plats. L’accent était mis sur la conception d’algorithmes efficaces, la comparaison de leurs performances et le respect des bonnes pratiques de développement.",
        goal: "Implémenter deux versions distinctes d’un algorithme de recherche en JavaScript, comparer leurs performances et recommander la plus efficace pour une intégration future côté back-end.",
        features: [
          "Intégration de l’interface de recherche et des filtres (tags)",
          "Développement de deux algorithmes de recherche (version boucles natives vs. version programmation fonctionnelle avec filter, map, reduce, etc.)",
          "Comparaison des performances via Jsben.ch",
          "Rédaction d’une fiche d’investigation de fonctionnalité documentant le choix de l’algorithmeretenu",
        ],
        challenges: [
          "Optimiser la recherche pour garantir une fluidité quasi-instantanée sur un large jeu de données",
          "Découper le code en fonctions modulaires et réutilisables pour respecter les bonnes pratiques (Green Code)",
          "Gérer la sécurité (prévenir les injections HTML via les formulaires)",
          "S’assurer que le code soit valide W3C et conforme au design Figma",
        ],
        image: "/images/projects/les-petits-plats.png",
        default: true,
        tags: ["OpenClassrooms", "HTML", "Bootstrap", "Javascript"],
        link: null,
        github: "https://github.com/cpnsn/Petits_Plats_P7",
      },
      {
        id: "billed",
        title: "Billed",
        year: "2024",
        summary:
          "Ce sixième projet OpenClassrooms portait sur le SaaS RH Billed, dont la fonctionnalité “note de frais“ devait être finalisée. Mon rôle a été de prendre en charge le parcours employé, en corrigeant les bugs et en mettant en place les tests nécessaires pour garantir la fiabilité de l’application.",
        goal: "L’objectif principal était d’assurer la fiabilité du parcours employé. Pour y parvenir, il s’agissait de déboguer les parties existantes, de rédiger et implémenter différents niveaux de tests (unitaires et d’intégration), d’élaborer un plan de tests end-to-end manuel couvrant les scénarios réels utilisateurs, et de valider le bon fonctionnement global de l’application.",
        features: [
          "Création et soumission de notes de frais (type, montant, date, justificatif…)",
          "Validation et envoi des justificatifs",
          "Interface employé testée et corrigée",
          "Débogage complémentaire sur le parcours administrateur",
          "Élaboration d’un plan de test end-to-end manuel pour couvrir les scénarios critiques du parcours employé (cas normaux, cas limites, gestion d’erreurs et critères d’acceptation)",
        ],
        challenges: [
          "Résolution rapide de bugs dans une application déjà en partie développée",
          "Utilisation de Chrome Debugger pour identifier et corriger les anomalies",
          "Mise en place d’une couverture de tests robuste (unitaires, intégration) et formalisation d’un plan E2E",
        ],
        image: "/images/projects/billed.png",
        default: false,
        tags: ["OpenClassrooms", "HTML", "CSS", "Javascript"],
        link: null,
        github: "https://github.com/cpnsn/Billed-app-FR-Front",
      },
      {
        id: "learn-at-home",
        title: "Learn@Home",
        year: "2024",
        summary:
          "Le septième projet de la formation OpenClassrooms consistait à cadrer un futur site web destiné à Learn@Home, une association fictive qui met en relation des enfants en difficulté scolaire avec des tuteurs bénévoles. L’enjeu n’était pas le développement technique, mais la définition précise des besoins pour préparer efficacement la phase de conception et de réalisation.",
        goal: "L’objectif principal était de recueillir, formaliser et présenter l’ensemble des besoins fonctionnels du client afin de préparer le développement de l’application. Cela passait par la création de livrables clairs et structurés (diagrammes, user stories, maquettes, Kanban) permettant à l’équipe projet et au client de partager une vision commune.",
        features: [
          "Création de diagrammes de cas d’usage pour les fonctionnalités clés : connexion, chat, calendrier, gestionnaire de tâches, tableau de bord",
          "Rédaction de user stories avec critères d’acceptation pour chaque fonctionnalité",
          "Réalisation de maquettes desktop et mobile avec Figma, illustrant la navigation entre les différentes pages",
          "Mise en place d’un Kanban pour découper le projet en blocs de fonctionnalités et sous-fonctionnalités",
        ],
        challenges: [
          "Formaliser les besoins du client de manière claire et exhaustive",
          "Prioriser les fonctionnalités pour structurer efficacement le Kanban",
          "Concevoir des maquettes cohérentes et simples, en respectant les contraintes de l’association et l’expérience utilisateur attendue",
        ],
        image: "/images/projects/learn-at-home.png",
        default: true,
        tags: ["OpenClassrooms", "Figma", "Notion"],
        link: null,
        github: null,
      },
      {
        id: "kasa",
        title: "Kasa",
        year: "2024",
        summary:
          "Le huitième projet OpenClassrooms consistait à développer la nouvelle plateforme web de Kasa, un acteur fictif de la location d’appartements entre particuliers. Il s’agissait de moderniser le site, initialement conçu en ASP.NET, en le migrant vers une stack JavaScript complète avec React côté front-end. À partir de maquettes Figma et d’un fichier JSON fourni en guise de back-end temporaire, j’ai conçu une application réactive et respectueuse des standards de qualité du code.",
        goal: "L’objectif principal de ce projet était de donner vie à la refonte du site Kasa en construisant l’intégralité de l’interface utilisateur avec React. Il s’agissait non seulement d’intégrer fidèlement les maquettes Figma en garantissant un rendu responsive, mais également d’implémenter les fonctionnalités prévues pour offrir une expérience fluide et moderne aux utilisateurs.",
        features: [
          "Initialisation et configuration d’un projet React (avec Vite)",
          "Création des composants dynamiques : galerie photo, menus déroulants, cartes de logements, système de notation par étoiles, etc.",
          "Mise en place de la navigation avec React Router pour gérer les différentes vues (accueil, logement, à propos, page 404)",
          "Intégration du fichier JSON comme source de données simulée en attendant le développement du back-end",
          "Application d’un design responsive conforme aux maquettes Figma",
          "Gestion des règles spécifiques de navigation dans la galerie (retour à la première image, affichage conditionnel des boutons)",
        ],
        challenges: [
          "Assurer la fidélité des composants aux maquettes Figma, y compris les animations attendues sur les menus déroulants",
          "Gérer des comportements précis (logique circulaire de la galerie, affichage conditionnel des contrôles)",
          "Respecter les coding guidelines de Kasa pour produire un code clair, réutilisable et facilement maintenable",
        ],
        image: "/images/projects/kasa.png",
        default: true,
        tags: ["OpenClassrooms", "React", "SASS"],
        link: null,
        github: "https://github.com/cpnsn/kasa_p11",
      },
      {
        id: "sportsee",
        title: "SportSee",
        year: "2024",
        summary:
          "Le neuvième projet de la formation OpenClassrooms consistait à développer la page profil utilisateur de la startup fictive SportSee, dédiée au suivi sportif. Cette page permettait aux utilisateurs de visualiser leurs sessions, les calories brûlées et d’autres indicateurs d’activité à travers des graphiques interactifs. Le projet s’est concentré sur l’intégration front-end avec React, en exploitant des données simulées puis en intégrant l’API fournie par le back-end.",
        goal: "L’objectif principal était de recréer la page profil en utilisant React et en respectant les maquettes Figma et les User Stories définies par le Product Owner. Il s’agissait de rendre les données d’activité facilement compréhensibles via des graphiques et de garantir une expérience utilisateur fluide. Le projet visait également à structurer le code de manière maintenable, avec un service dédié pour les appels API et une standardisation des données récupérées.",
        features: [
          "Affichage de données utilisateur concernant les sessions sportives et les calories brûlées",
          "Intégration de graphiques dynamiques avec Recharts pour visualiser l’activité",
          "Utilisation d’un service React pour gérer les appels HTTP vers l’API et traitement des données pour standardisation",
          "Gestion des mock data avant l’intégration complète de l’API",
          "Documentation du projet via README et commentaires pour faciliter la maintenance et la collaboration",
        ],
        challenges: [
          "Standardiser les données issues de l’API, qui variaient selon les utilisateurs, afin de les rendre exploitables pour les composants React",
          "Intégrer des graphiques interactifs avec Recharts",
          "Séparer la logique métier (appels API, transformation des données) de la logique d’affichage React pour un code clair et réutilisable",
        ],
        image: "/images/projects/sportsee.png",
        default: true,
        tags: ["OpenClassrooms", "React", "Recharts", "Tailwind"],
        link: null,
        github: "https://github.com/cpnsn/SportSee",
      },
      {
        id: "argent-bank",
        title: "Argent Bank",
        year: "2025",
        summary:
          "Le dixième projet de la formation OpenClassrooms consistait à développer la phase 1 d’une application bancaire pour Argent Bank, centrée sur l’authentification et la gestion du profil utilisateur. L’application web devait être créée avec React et Redux pour la gestion du state, et respecter le design responsive fourni. Le projet s’inscrivait dans un contexte professionnel réel, avec des API déjà fournies par l’équipe back-end et une documentation Swagger complète.",
        goal: "L’objectif de ce projet était de mettre en place un système complet d’authentification pour les utilisateurs de la banque, permettant de sécuriser l’accès aux informations personnelles et de gérer la mise à jour du profil. Il s’agissait également de garantir une expérience utilisateur fluide et sécurisée, de structurer le code front-end avec React et Redux de manière maintenable et de préparer la phase suivante concernant les transactions en proposant une architecture d’API conforme aux standards Swagger.",
        features: [
          "Système de connexion et déconnexion sécurisée, permettant d’accéder aux informations du profil uniquement après authentification",
          "Gestion du profil utilisateur, avec possibilité de modifier les informations personnelles et de sauvegarder les changements dans la base de données",
          "Intégration avec Redux pour gérer le state global de l’application",
          "Documentation des API proposées pour la phase 2, avec définition des endpoints, méthodes HTTP, paramètres et réponses, exportée au format YAML",
        ],
        challenges: [
          "Mise en place d’une architecture front-end solide avec React et Redux, en assurant la bonne synchronisation entre state et composants",
          "Gestion sécurisée des données sensibles des utilisateurs et des sessions",
          "Conception d’une API transactionnelle claire et standardisée pour la phase suivante, en suivant les bonnes pratiques Swagger",
        ],
        image: "/images/projects/argent-bank.png",
        default: true,
        tags: ["OpenClassrooms", "React", "Redux", "Tailwind", "Swagger"],
        link: null,
        github: "https://github.com/cpnsn/Project-13-Bank-API",
      },
      {
        id: "wealth-health",
        title: "Wealth Health",
        year: "2025",
        summary:
          "Le onzième projet OpenClassrooms consistait à convertir l’application interne HRnet d’une société financière de jQuery vers React. L’application souffrait de ralentissements et de bugs importants liés aux plugins jQuery utilisés pour les sélecteurs de date, les fenêtres modales, les menus déroulants et les tableaux. L’objectif principal était de créer une application 100 % React, modulaire et maintenable, tout en améliorant les performances et la stabilité de l’interface.",
        goal: "L’objectif de ce projet était de moderniser l’application HRnet en la rendant entièrement fonctionnelle avec React, en remplaçant le code jQuery obsolète et en assurant une expérience utilisateur fluide. Cela impliquait la conversion complète des pages principales, la création de composants React modulaires pour remplacer les plugins jQuery et la mise en place de tests de performance quantifiables afin de démontrer l’amélioration des performances.",
        features: [
          "Conversion complète de l’application en React",
          "Remplacement d’un plugin jQuery par un composant React fonctionnel, avec documentation et commentaires explicatifs",
          "Implémentation de composants React pour les plugins restants",
          "Gestion de l’état de l’application avec un système centralisé, remplaçant le stockage local existant",
          "Tests de performance comparatifs avec Lighthouse, mesurant le temps de chargement, les appels réseau et d’autres métriques pour évaluer l’amélioration",
          "Publication du composant React converti sur npm",
        ],
        challenges: [
          "Conversion d’un projet complet jQuery vers React",
          "Création de composants React modulaires remplaçant les plugins jQuery avec un paradigme fonctionnel",
          "Gestion du state global et synchronisation entre les composants React",
          "Réalisation d’audits de performance comparatifs entre l’ancienne et la nouvelle application",
          "Documentation complète des composants pour assurer la maintenabilité et faciliter l’intégration future",
        ],
        image: "/images/projects/wealth-health.png",
        default: true,
        tags: ["OpenClassrooms", "React", "Redux", "Tailwind", "npm"],
        link: null,
        github: "https://github.com/cpnsn/P12_Front-end",
      },
    ],
  },
  {
    formation: "Ironhack",
    projects: [
      {
        id: "rock-paper-star",
        title: "Rock Paper Star",
        year: "2022",
        summary:
          "Ce pierre-feuille-ciseaux sur le thème de Star Wars est le premier projet sur lequel j’ai travaillé dans le cadre de la formation intensive Développeur Full-Stack d’Ironhack. Le jeu se joue directement dans le navigateur, avec une ambiance sonore et visuelle inspirée de l’univers galactique.",
        goal: "L’objectif était de concevoir et développer un jeu simple mais complet en HTML, CSS et JavaScript, en respectant les bonnes pratiques de code (KISS et DRY). Le projet devait être versionné sur GitHub, inclure des commits réguliers, puis être déployé sur GitHub Pages, le tout en 5 jours.",
        features: [
          "Jeu de pierre-feuille-ciseaux revisité avec un univers Star Wars",
          "Interface jouable directement dans le navigateur",
          "Effets visuels et sonores annonçant la victoire ou la défaite",
          "Déploiement en ligne pour permettre à tout le monde de jouer",
        ],
        challenges: [
          "Implémenter la logique du jeu en JavaScript pour gérer les différentes combinaisons de coups",
          "Manipuler le DOM pour mettre à jour dynamiquement l’affichage selon les résultats",
          "Organiser le projet avec des commits réguliers et un déploiement fonctionnel sur GitHub Pages",
        ],
        image: "/images/projects/rock-paper-star.png",
        default: true,
        tags: ["Ironhack", "HTML", "CSS", "Javascript"],
        link: "https://cpnsn.github.io/Ironhack-project-1-Rock-Paper-Scissors/",
        github:
          "https://github.com/cpnsn/Ironhack-project-1-Rock-Paper-Scissors",
      },
      {
        id: "todo",
        title: "Todo App",
        year: "2022",
        summary:
          "Todo est une application de gestion de tâches développée dans le cadre du second projet de la formation intensive Développeur Full-Stack d’Ironhack. Elle permet aux utilisateurs de s’organiser en créant, modifiant et supprimant leurs tâches, avec un système d’authentification sécurisé.",
        goal: "Concevoir une application web complète en utilisant Express et Mongoose, tout en mettant en place les fonctionnalités essentielles d’une application moderne : authentification, gestion de données avec validation, et déploiement en ligne.",
        features: [
          "Création, affichage, modification et suppression de tâches (CRUD complet)",
          "Gestion des utilisateurs avec inscription, connexion et déconnexion",
          "Mots de passe chiffrés pour garantir la sécurité",
          "Validation des modèles et affichage de messages d’erreur clairs",
          "Déploiement de l’application sur Render, accessible en ligne",
        ],
        challenges: [
          "Structurer l’application autour d’Express et Mongoose",
          "Mettre en place une authentification sécurisée avec chiffrement des mots de passe",
          "Gérer les erreurs de validation pour améliorer l’expérience utilisateur",
        ],
        image: "/images/projects/todo.png",
        default: false,
        tags: [
          "Ironhack",
          "HTML",
          "CSS",
          "Javascript",
          "Node.js",
          "Express.js",
          "Mongoose",
          "MongoDB",
        ],
        link: "https://to-do-list-lfki.onrender.com/",
        github: "https://github.com/cpnsn/to-do-list",
      },
      {
        id: "museek",
        title: "MuSeek",
        year: "2022",
        summary:
          "Ce troisième et dernier projet de la formation intensive Développeur Full-Stack d’Ironhack, réalisé en binôme, consistait à développer une application web permettant de mettre en relation des musiciens et des groupes à la recherche de nouveaux talents. C’était l’occasion de mettre en pratique l’ensemble des compétences acquises, aussi bien en frontend qu’en backend, avec la stack MERN.",
        goal: "Concevoir une application complète et moderne, avec un frontend en React et un backend REST API sous Express/MongoDB. L’application devait gérer l’authentification des utilisateurs, proposer des actions CRUD sur plusieurs modèles et être déployée en ligne.",
        features: [
          "Inscription, connexion et déconnexion sécurisées (mots de passe chiffrés, gestion des autorisations)",
          "Création, lecture, modification et suppression de contenus",
          "Trois modèles minimum : utilisateur, musicien/groupe, et un modèle supplémentaire lié à la logique métier",
          "Gestion centralisée des erreurs et validation des données côté backend",
        ],
        challenges: [
          "Mettre en place deux dépôts GitHub distincts pour séparer frontend et backend, tout en assurant leur bonne communication",
          "Structurer une application React avec plusieurs vues tout en maintenant la fluidité de l’expérience utilisateur (SPA)",
          "Implémenter un backend robuste avec validation et gestion centralisée des erreurs",
        ],
        image: "/images/projects/museek.png",
        default: true,
        tags: [
          "Ironhack",
          "HTML",
          "CSS",
          "Javascript",
          "React",
          "MongoDB",
          "Express.js",
        ],
        link: "https://iron-museek.netlify.app/",
        github: "https://github.com/VitchetUK/Projet-3-Front-client",
      },
    ],
  },
];
